'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

exports['default'] = TestStoreWrapper;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

require('harmony-reflect');

var TestStore = (function () {
  function TestStore(store, actions) {
    _classCallCheck(this, TestStore);

    this.store = store;
    this.actions = actions;
  }

  _createClass(TestStore, [{
    key: 'test',
    value: function test(callback) {
      callback.call(this, this.store);
      return this;
    }
  }]);

  return TestStore;
})();

function TestStoreWrapper(store, actions) {
  var proxy = new Proxy(new TestStore(store, actions), {
    get: function get(target, name) {
      if (name in target) {
        return target[name];
      } else if (name in target.actions) {
        return function (params) {
          target.actions[name](params);
          return proxy;
        };
      }
    }
  });

  return proxy;
}

module.exports = exports['default'];